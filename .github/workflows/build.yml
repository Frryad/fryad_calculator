name: CI: Build Flutter APK & IPA

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable

      - name: Cache flutter pub
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Flutter pub get
        run: flutter pub get

      - name: Prepare Android keystore (optional)
        if: secrets.ANDROID_KEYSTORE_BASE64 != ''
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/keystore.jks
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=keystore.jks
          EOF

      - name: Build Android APK (release)
        run: flutter build apk --release

      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/*.apk

  build-ios:
    runs-on: macos-latest
    # NOTE: building iOS requires Apple signing files + a macOS runner.
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: stable

      - name: Flutter pub get
        run: flutter pub get

      - name: (Optional) Import Apple cert & profile
        if: secrets.APPLE_CERT_BASE64 != '' || secrets.PROFILE_BASE64 != ''
        run: |
          mkdir -p ~/apple_sign
          if [ -n "$APPLE_CERT_BASE64" ]; then
            echo "$APPLE_CERT_BASE64" | base64 --decode > ~/apple_sign/cert.p12
          fi
          if [ -n "$PROFILE_BASE64" ]; then
            echo "$PROFILE_BASE64" | base64 --decode > ~/apple_sign/profile.mobileprovision
          fi
          ls -la ~/apple_sign

      - name: Build iOS (ipa, no codesign)
        # --no-codesign produces an archive you can export on a Mac with proper signing
        run: flutter build ipa --no-codesign || true

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive
          path: build/ios/ipa || build/ios/Runner.xcarchive || build/ios/

`

